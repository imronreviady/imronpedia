<script>
	jQuery(document).ready(function($) {
		"use strict";
		
		var PSV_UPSERT_M     = $("div#product-sizevar-modal");
		var PSV_UPSERT_F     = PSV_UPSERT_M.find("form#prod-sizevar-upsert-form");
		var PROD_UPSERT_PAGE = $("div#product-upsert-page");
        var P_UPSERT_FM      = PROD_UPSERT_PAGE.find("form#product-upsert-form");

		$.AdminBSB.init('controls');

        PSV_UPSERT_M.on('hidden.bs.modal', function () {  
            PSV_UPSERT_M.remove();
            $(document).off("change","input.size-var-control");
        });

        $(document).on("change","input.size-var-control",function(event) {
        	$(this).parent('div.size-unit').siblings('div.size-unit').find('input').prop('checked',false);
        });

        PSV_UPSERT_F.find('div.sizing-addon').find('input#add_su').keyup(function(event) {
			var val = $(this).val();
			var val = $.trim(val);

			if (PSV_UPSERT_F.find('input.size-var-control[value="{0}"]'.format(val)).length > 0) {
				PSV_UPSERT_F.find('div.sizing-addon').find('button').attr('disabled', 'true');
			} 

			else {
				if (hs_empty(val)) {
					PSV_UPSERT_F.find('div.sizing-addon').find('button').attr('disabled', 'true');
				} 

		 		else {
					PSV_UPSERT_F.find('div.sizing-addon').find('button').removeAttr('disabled');
				}
			}
		});

        PSV_UPSERT_F.find('div.sizing-addon').find('button').on('click',function(event) {
			var sz_unit_val = PSV_UPSERT_F.find('div.sizing-addon').find('input').val();
			PSV_UPSERT_F.find('div.sizing-addon').find('input').val('');

			if (PSV_UPSERT_F.find('input.size-var-control[value="{0}"]'.format(sz_unit_val)).length > 0) {
				return false;
			} 

			else if (sz_unit_val.length > 0) {
				var sizes_def   = PSV_UPSERT_F.find('div.sizes-defining');
				if(sizes_def.find('div.size-unit').length < 20) {
					var sz_unit_box = $('<div>',{
						class: 'size-unit',
						html: [
							$('<input>',{
								type: "checkbox",
								class: "size-var-control filled-in chk-col-blue",
								id: "cbox-{0}".format(sz_unit_val.replace(/\s/ig,"")),
								value: sz_unit_val,
								checked: "true",
								name: "size"
							}),
							$('<label>',{
								for: "cbox-{0}".format(sz_unit_val.replace(/\s/ig,"")),
								text: sz_unit_val,
								class: "col-blue"
							}),
						]
					});

					sizes_def.append(sz_unit_box);
					sizes_def.find('div.size-unit').not(sz_unit_box).find('input').prop('checked',false);
				} 

				else {
					var invalid_field = PSV_UPSERT_F.find('[data-form-field="2"]');
					PSV_UPSERT_M.scroll2inner(invalid_field,500);
					invalid_field.append($('<small>',{
						class: 'col-red animated flash',
						text: "{{TR You cannot add more than 20 units of measure. Please select one of them}}!"
					}));

					PSV_UPSERT_F.find('div.sizing-addon').find('button').attr('disabled', 'true');
					PSV_UPSERT_F.find('div.sizing-addon').find('input#add_su').attr('disabled', 'true');
				}
			} 
		});

		PSV_UPSERT_F.ajaxForm({
        	url: '{{CONFIG url}}/req/products/svar_upsert',
        	type: 'POST',
        	dataType: 'json',
        	beforeSend: function() {  
                PSV_UPSERT_F.find('small.error-message').remove();
                PSV_UPSERT_F.find('button[data-section-node="main_submit_btn"]').find('span').text("{{TR Please wait}}!");
                PSV_UPSERT_F.find('button[data-section-node="main_submit_btn"]').attr('disabled', 'true');
                PSV_UPSERT_F.find('button[data-section-node="main_cancel_btn"]').attr('disabled', 'true');
        	},
        	success: function(data) {
        		if (data.status == 200) {	
        			PSV_UPSERT_M.modal('hide');
        			var total_vars = P_UPSERT_FM.find('button#show-prodvar-btn');
        			delay(function(){
        				total_vars.find('b').text(data.total);
        				if (total_vars.hasAttr('disabled')) {
							total_vars.removeAttr('disabled');
						}

						$.notify({
                            message: data.message,
                        },{
	                        allow_dismiss: false,icon_type: "class",type: 'default',timer: 500,
	                        placement: {from: "bottom",align: "left"},
	                        offset: {x: 40,y: 30},
	                        animate: {enter: 'animated fadeInUp',exit: 'animated fadeOutDown'}
	                    });
        			},1000);
        		} 

        		else {
        			if (data.err_code == 14 || data.err_code == 406) {
        				PSV_UPSERT_M.modal('hide');
	        			delay(function(){
							$.notify({
	                            message: data.message,
	                        },{
		                        allow_dismiss: false,icon_type: "class",type: 'default',timer: 500,
		                        placement: {from: "bottom",align: "left"},
		                        offset: {x: 40,y: 30},
		                        animate: {enter: 'animated fadeInUp',exit: 'animated fadeOutDown'}
		                    });
	        			},1000);
        			}
        			else {
        				var invalid_field = PSV_UPSERT_M.find('[data-form-field="{0}"]'.format(data.err_code));
	                    invalid_field.append($("<small>",{
	                        text: data.message,
	                        class: 'col-red animated flash error-message'
	                    }));
	                    PSV_UPSERT_M.scroll2inner(invalid_field,500);
        			} 

        			PSV_UPSERT_F.find('button[data-section-node="main_submit_btn"]').find('span').text(
                        PSV_UPSERT_F.find('button[data-section-node="main_submit_btn"]').attr('title')
                    );

                    PSV_UPSERT_F.find('button[data-section-node="main_submit_btn"]').removeAttr('disabled');
                    PSV_UPSERT_F.find('button[data-section-node="main_cancel_btn"]').removeAttr('disabled');
        		}
        	}
        });
	});
</script>